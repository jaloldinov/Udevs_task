definitions:
  book_service.Book:
    properties:
      author_id:
        type: string
      category_id:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  book_service.Category:
    properties:
      category_name:
        type: string
      id:
        type: string
    type: object
  book_service.CreateAuthorRequest:
    properties:
      firstName:
        type: string
      lastName:
        type: string
    type: object
  book_service.CreateBookRequest:
    properties:
      author_id:
        type: string
      category_id:
        type: string
      name:
        type: string
    type: object
  book_service.CreateCategoryRequest:
    properties:
      category_name:
        type: string
    type: object
  book_service.GetAllBookResponse:
    properties:
      books:
        items:
          $ref: '#/definitions/book_service.Book'
        type: array
      count:
        type: integer
    type: object
  book_service.GetAllCategoryResponse:
    properties:
      categories:
        items:
          $ref: '#/definitions/book_service.Category'
        type: array
      count:
        type: integer
    type: object
  models.Author:
    properties:
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
    required:
    - first_name
    - last_name
    type: object
  models.BookModel:
    properties:
      author_id:
        type: string
      category_id:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  models.Category:
    properties:
      category_name:
        type: string
      id:
        type: string
    required:
    - category_name
    type: object
  models.CreateAuthor:
    properties:
      first_name:
        type: string
      last_name:
        type: string
    required:
    - first_name
    - last_name
    type: object
  models.CreateBookModel:
    properties:
      author_id:
        type: string
      category_id:
        type: string
      name:
        type: string
    type: object
  models.CreateCategory:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  models.GetAllAuthorResponse:
    properties:
      authors:
        items:
          $ref: '#/definitions/models.Author'
        type: array
      count:
        type: integer
    type: object
  models.ResponseModel:
    properties:
      code:
        type: integer
      data: {}
      error: {}
      message:
        type: string
    type: object
  models.Status:
    properties:
      status:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/author:
    get:
      consumes:
      - application/json
      description: get author
      operationId: get-author
      parameters:
      - description: search
        in: query
        name: search
        type: string
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.GetAllAuthorResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: get author all
      tags:
      - author
    post:
      consumes:
      - application/json
      description: create author by inserting name
      operationId: create-author
      parameters:
      - description: author
        in: body
        name: author
        required: true
        schema:
          $ref: '#/definitions/book_service.CreateAuthorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.Author'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: create author
      tags:
      - author
  /v1/author/{author_id}:
    delete:
      consumes:
      - application/json
      description: Delete Author
      operationId: delete-author
      parameters:
      - description: author_id
        in: path
        name: author_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.Status'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: delete author
      tags:
      - author
    get:
      consumes:
      - application/json
      description: get author
      operationId: get-author-byID
      parameters:
      - description: author_id
        in: path
        name: author_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.Author'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: get author by ID
      tags:
      - author
    put:
      consumes:
      - application/json
      description: Update Author by ID
      operationId: update_author
      parameters:
      - description: author_id
        in: path
        name: author_id
        required: true
        type: string
      - description: author
        in: body
        name: author
        required: true
        schema:
          $ref: '#/definitions/models.CreateAuthor'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.Status'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: Update Author
      tags:
      - author
  /v1/book:
    get:
      consumes:
      - application/json
      description: get book
      operationId: get-book
      parameters:
      - description: search
        in: query
        name: search
        type: string
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/book_service.GetAllBookResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: get book all
      tags:
      - book
    post:
      consumes:
      - application/json
      description: create book
      operationId: create-books
      parameters:
      - description: book
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/book_service.CreateBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/book_service.Book'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: create book
      tags:
      - book
  /v1/book/{book_id}:
    delete:
      consumes:
      - application/json
      description: Delete Book
      operationId: delete-book
      parameters:
      - description: book_id
        in: path
        name: book_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.Status'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: delete book
      tags:
      - book
    get:
      consumes:
      - application/json
      description: get book
      operationId: get-book-byID
      parameters:
      - description: book_id
        in: path
        name: book_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.BookModel'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: get book by ID
      tags:
      - book
    put:
      consumes:
      - application/json
      description: Update Book by ID
      operationId: update_book
      parameters:
      - description: book_id
        in: path
        name: book_id
        required: true
        type: string
      - description: book
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.CreateBookModel'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.Status'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: Update Book
      tags:
      - book
  /v1/category:
    get:
      consumes:
      - application/json
      description: get category
      operationId: get-category
      parameters:
      - description: search
        in: query
        name: search
        type: string
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/book_service.GetAllCategoryResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: get category all
      tags:
      - category
    post:
      consumes:
      - application/json
      description: create category
      operationId: create-categorys
      parameters:
      - description: category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/book_service.CreateCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/book_service.Category'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: create category
      tags:
      - category
  /v1/category/{category_id}:
    delete:
      consumes:
      - application/json
      description: Delete Category
      operationId: delete-category
      parameters:
      - description: category_id
        in: path
        name: category_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.Status'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: delete category
      tags:
      - category
    get:
      consumes:
      - application/json
      description: get category
      operationId: get-category-byID
      parameters:
      - description: category_id
        in: path
        name: category_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.Category'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: get category by ID
      tags:
      - category
    put:
      consumes:
      - application/json
      description: Update Category by ID
      operationId: update_category
      parameters:
      - description: category_id
        in: path
        name: category_id
        required: true
        type: string
      - description: category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategory'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/models.Status'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: Update Category
      tags:
      - category
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
